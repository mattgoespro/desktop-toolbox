import { app, BrowserWindow } from "electron";
import electronSquirrel from "electron-squirrel-startup"; // This will quit the app if it was launched by Squirrel.Windows
import {
  installExtension,
  REDUX_DEVTOOLS,
  REACT_DEVELOPER_TOOLS
} from "electron-devtools-installer";

/**
 * This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
 * plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
 * whether you're running in development or production).
 */
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

/**
 * Handle creating/removing shortcuts on Windows when installing/uninstalling.
 */
if (electronSquirrel) {
  app.quit();
}

async function createApplicationWindow() {
  // Create the browser window.
  const mainWindow = new BrowserWindow({
    height: 600,
    width: 800,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      nodeIntegration: true
    }
  });

  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  for (const extension of [
    { name: "Redux Devtools", reference: REDUX_DEVTOOLS },
    { name: "React Devtools", reference: REACT_DEVELOPER_TOOLS }
  ]) {
    await installExtension(extension.reference);
    console.log(`Installed ${extension.name} (${extension.reference.id}) extension.`);
  }
  mainWindow.webContents.openDevTools();
}

app.on("ready", createApplicationWindow);

app.on("window-all-closed", () => {
  if (process.platform !== "darwin") {
    app.quit();
  }
});

app.on("activate", () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createApplicationWindow();
  }
});
