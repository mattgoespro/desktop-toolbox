/**
 * Executes inside of electron's main process.
 */
import { app } from "electron";
import { DesktopToolsWindow } from "./app/window";
import path from "path";
import fs from "fs";

/**
 * This allows TypeScript to pick up the 'magic constants' that are auto-generated by Forge's Webpack
 * plugin, which tells the Electron app where to look for the Webpack-bundled app code (depending on
 * whether the app is running in development or production).
 */
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

if (require("electron-squirrel-startup")) {
  app.quit();
}

app.setAppUserModelId("com.squirrel.DesktopToolbox.DesktopToolbox");

async function createApplicationWindow() {
  const localSharpPath = path.join(
    process.resourcesPath,
    "app.asar.unpacked",
    "node_modules",
    "sharp"
  );

  /**
   * Resolve the `sharp` module in packaged applications.
   */
  if (!fs.existsSync(path.join(__dirname, "node_modules", "sharp"))) {
    require("module").globalPaths.push(localSharpPath);
    console.log(`Added \`sharp\` module to global paths.`);
  }

  const window = new DesktopToolsWindow({
    windowEntry: MAIN_WINDOW_WEBPACK_ENTRY,
    windowPreloadEntry: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    windowEvents: {
      onReady: (window) => {
        window.show();
      },
      onClose: () => {
        app.quit();
      }
    },
    icon: path.join(app.getAppPath(), "assets", "icon.png")
  });
  return window;
}

app.on("ready", async () => {
  const appWindow = await createApplicationWindow();
  await appWindow.init();
});
